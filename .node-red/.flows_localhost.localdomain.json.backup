[{"id":"f8ff044f.d86638","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"cb4300f6.8d88d","type":"http request","z":"f8ff044f.d86638","name":"get repo list","method":"GET","ret":"obj","url":"https://api.github.com/orgs/zetapush/repos","tls":"","x":150,"y":180,"wires":[["d2696fb1.41f8"]]},{"id":"fdb8618c.74b7e","type":"debug","z":"f8ff044f.d86638","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1050,"y":320,"wires":[]},{"id":"1c3bca7.e743036","type":"http response","z":"f8ff044f.d86638","name":"","statusCode":"","headers":{},"x":1030,"y":380,"wires":[]},{"id":"777dc3f1.c4aeac","type":"http in","z":"f8ff044f.d86638","name":"","url":"/github","method":"get","upload":false,"swaggerDoc":"","x":110,"y":60,"wires":[["61d93eb1.8eef2"]]},{"id":"d2696fb1.41f8","type":"function","z":"f8ff044f.d86638","name":"get repo {}","func":"for (var i = 0; i < msg.payload.length; i++) {\n    if (msg.payload[i].open_issues && msg.payload[i].name == 'zetapush') {\n        global.set(\"repo\", msg.payload[i].name);\n        msg.payload = msg.payload[i];\n        node.send(msg);\n    }\n}","outputs":1,"noerr":0,"x":310,"y":180,"wires":[["1ef0933e.bb48ed","4ac6f7bb.ef4978","5752121a.afb50c"]]},{"id":"61d93eb1.8eef2","type":"change","z":"f8ff044f.d86638","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.user-agent","pt":"msg","to":"req.headers.user-agent","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":60,"wires":[["cb4300f6.8d88d"]]},{"id":"2c6c44c4.bf0a1c","type":"http request","z":"f8ff044f.d86638","name":"/GET issues","method":"GET","ret":"obj","url":"","tls":"","x":670,"y":380,"wires":[["5311417c.55406"]]},{"id":"4ac6f7bb.ef4978","type":"change","z":"f8ff044f.d86638","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.user-agent","pt":"msg","to":"req.headers.user-agent","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":380,"wires":[["a7fddade.8cfef8"]]},{"id":"5311417c.55406","type":"function","z":"f8ff044f.d86638","name":"merge data","func":"function obj_tab_filter(obj, accept)\n{\n    var tab = [];\n\n    obj.forEach(function(elem) {\n        tab.push(Object.keys(elem)\n            .filter(key => accept.includes(key))\n            .reduce((tmp, key) => {\n                tmp[key] = elem[key];\n                return tmp;\n            }, {})\n        );\n    });\n    return (tab);\n}\n\nfunction parse_time(time)\n{\n    var split = time.split(\"T\");\n\n    return (split[0] + \" \" + split[1].slice(0, -1));\n}\n\nfunction get_good_color(objtab)\n{\n    for (var i = 0; i < objtab.length; i++)\n        objtab[i].color = \"#\" + objtab[i].color;\n    return (objtab);\n}\n\nvar data = {};\n\ndata.release = global.get(\"tags\");\ndata.repo = global.get(\"repo\");\ndata.pull_request = global.get(\"pull_request\");\ndata.issues = [];\nfor (var i = 0; i < msg.payload.length; i++) {\n    if (msg.payload[i].pull_request !== 'undefined')\n        continue;\n    msg.payload[i] = {\n        name: msg.payload[i].title,\n        id: msg.payload[i].number,\n        url: msg.payload[i].html_url,\n        user: {\n            name: msg.payload[i].user.login,\n            avatar: msg.payload[i].user.avatar_url,\n            url: msg.payload[i].user.html_url\n        },\n        created: parse_time(msg.payload[i].created_at),\n        labels: get_good_color(obj_tab_filter(msg.payload[i].labels, [\"name\", \"color\"])),\n        body: msg.payload[i].body,\n        assignees: obj_tab_filter(msg.payload[i].assignees, [\"login\", \"avatar_url\"])\n    };\n    data.issues.push(msg.payload[i]);\n}\nmsg.payload = data;\nnode.send(msg);","outputs":1,"noerr":0,"x":850,"y":380,"wires":[["1c3bca7.e743036","fdb8618c.74b7e"]]},{"id":"dbed0daf.7ff0e","type":"http request","z":"f8ff044f.d86638","name":"/GET tags","method":"GET","ret":"obj","url":"","tls":"","x":660,"y":300,"wires":[["718b867d.ced948"]]},{"id":"1ef0933e.bb48ed","type":"change","z":"f8ff044f.d86638","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.user-agent","pt":"msg","to":"req.headers.user-agent","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":300,"wires":[["51a677c3.ca38d8"]]},{"id":"a7fddade.8cfef8","type":"function","z":"f8ff044f.d86638","name":"issues","func":"msg.url = 'https://api.github.com/repos/zetapush/' + msg.payload.name + '/issues';\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":380,"wires":[["2c6c44c4.bf0a1c"]]},{"id":"51a677c3.ca38d8","type":"function","z":"f8ff044f.d86638","name":"tags","func":"msg.url = 'https://api.github.com/repos/zetapush/' + msg.payload.name + '/tags';\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":300,"wires":[["dbed0daf.7ff0e"]]},{"id":"718b867d.ced948","type":"function","z":"f8ff044f.d86638","name":"get last tags","func":"msg.payload = msg.payload[0].name;\nglobal.set(\"tags\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":850,"y":300,"wires":[[]]},{"id":"3dfd2ef7.e6dcc2","type":"http request","z":"f8ff044f.d86638","name":"/GET pulls","method":"GET","ret":"obj","url":"","tls":"","x":670,"y":460,"wires":[["b6de56bf.91fd68"]]},{"id":"5752121a.afb50c","type":"change","z":"f8ff044f.d86638","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.user-agent","pt":"msg","to":"req.headers.user-agent","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":460,"wires":[["2bf821f3.ed4dfe"]]},{"id":"2bf821f3.ed4dfe","type":"function","z":"f8ff044f.d86638","name":"pull request","func":"msg.url = 'https://api.github.com/repos/zetapush/' + msg.payload.name + '/pulls';\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":460,"wires":[["3dfd2ef7.e6dcc2"]]},{"id":"b6de56bf.91fd68","type":"function","z":"f8ff044f.d86638","name":"get pull request list","func":"function obj_tab_filter(obj, accept)\n{\n    var tab = [];\n\n    obj.forEach(function(elem) {\n        tab.push(Object.keys(elem)\n            .filter(key => accept.includes(key))\n            .reduce((tmp, key) => {\n                tmp[key] = elem[key];\n                return tmp;\n            }, {})\n        );\n    });\n    return (tab);\n}\n\nfunction parse_time(time)\n{\n    var split = time.split(\"T\");\n\n    return (split[0] + \" \" + split[1].slice(0, -1));\n}\n\nfunction get_good_color(objtab)\n{\n    for (var i = 0; i < objtab.length; i++)\n        objtab[i].color = \"#\" + objtab[i].color;\n    return (objtab);\n}\n\nvar data = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    msg.payload[i] = {\n        name: msg.payload[i].title,\n        id: msg.payload[i].number,\n        url: msg.payload[i].html_url,\n        user: {\n            name: msg.payload[i].user.login,\n            avatar: msg.payload[i].user.avatar_url,\n            url: msg.payload[i].user.html_url\n        },\n        created: parse_time(msg.payload[i].created_at),\n        labels: get_good_color(obj_tab_filter(msg.payload[i].labels, [\"name\", \"color\"])),\n        body: msg.payload[i].body,\n        requested_reviewers: obj_tab_filter(msg.payload[i].requested_reviewers, [\"login\", \"avatar_url\"]),\n        commit: msg.payload[i].commits,\n        head: msg.payload[i].head.ref,\n        base: msg.payload[i].base.ref\n    };\n    data.push(msg.payload[i]);\n}\n\nmsg.payload = data;\nglobal.set(\"pull_request\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":460,"wires":[[]]}]